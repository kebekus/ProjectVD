import Mathlib.Analysis.Analytic.IsolatedZeros
import Mathlib.Analysis.Analytic.Order

open Real Filter

/--
The set where an analytic function has zero or infinite order is discrete within
its domain of analyticity.
-/
theorem AnalyticOnNhd.codiscreteWithin_setOf_analyticOrderAt_eq_zero_or_top {f : ‚Ñù ‚Üí ‚Ñù} {U : Set ‚Ñù}
    (hf : AnalyticOnNhd ‚Ñù f U) :
    {u : ‚Ñù | analyticOrderAt f u = 0 ‚à® analyticOrderAt f u = ‚ä§} ‚àà codiscreteWithin U := by
  simp_rw [mem_codiscreteWithin, disjoint_principal_right]
  intro x hx
  rcases (hf x hx).eventually_eq_zero_or_eventually_ne_zero with h‚ÇÅf | h‚ÇÅf
  ¬∑ filter_upwards [eventually_nhdsWithin_of_eventually_nhds h‚ÇÅf.eventually_nhds] with a ha
    simp [analyticOrderAt_eq_top, ha]
  ¬∑ filter_upwards [h‚ÇÅf] with a ha
    simp +contextual [(hf a _).analyticOrderAt_eq_zero, ha]

/--
If an analytic function `f` is not constantly zero on a connected set `U`, then
its set of zeros is codiscrete within `U`.
-/
theorem AnalyticOnNhd.preimage_zero_codiscreteWithin {f : ‚Ñù ‚Üí ‚Ñù} {U : Set ‚Ñù} {x : ‚Ñù} (h‚ÇÅf : AnalyticOnNhd ‚Ñù f U) (h‚ÇÇf : f x ‚â† 0)
    (hU : IsConnected U) (hx : x ‚àà U) :
    f ‚Åª¬π' {0}·∂ú ‚àà codiscreteWithin U := by
  filter_upwards [h‚ÇÅf.codiscreteWithin_setOf_analyticOrderAt_eq_zero_or_top, self_mem_codiscreteWithin U] with a ha h‚ÇÇa
  rw [‚Üê (h‚ÇÅf x hx).analyticOrderAt_eq_zero] at h‚ÇÇf
  have {u : U} : analyticOrderAt f u ‚â† ‚ä§ := by
    apply (h‚ÇÅf.exists_analyticOrderAt_ne_top_iff_forall hU).1
    use ‚ü®x, hx‚ü©
    simp_all
  rw [(h‚ÇÅf a h‚ÇÇa).analyticOrderAt_eq_zero] at ha
  simp_all

/--
If an analytic function `f` is not constantly zero on `ùïú`, then its set of
zeros is codiscrete.
-/
theorem AnalyticOnNhd.preimage_zero_codiscrete {f : ‚Ñù ‚Üí ‚Ñù} {x : ‚Ñù} (h‚ÇÅf : AnalyticOnNhd ‚Ñù f Set.univ) (hx : f x ‚â† 0) :
    f ‚Åª¬π' {0}·∂ú ‚àà codiscrete ‚Ñù :=
  h‚ÇÅf.preimage_zero_codiscreteWithin hx isConnected_univ trivial
