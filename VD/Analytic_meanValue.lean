/-
Copyright (c) 2025 Stefan Kebekus. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Stefan Kebekus
-/
import Mathlib.Analysis.Calculus.FDeriv.Symmetric
import Mathlib.Analysis.Complex.CauchyIntegral
import Mathlib.Analysis.Complex.Conformal
import Mathlib.Analysis.InnerProductSpace.Harmonic.Basic
import Mathlib.MeasureTheory.Integral.CircleAverage

/-!
# Mean Value Property of Harmonic Functions
-/

open Complex InnerProductSpace Real Topology

variable
  {f : ‚ÑÇ ‚Üí ‚Ñù} {r : ‚Ñù}

/-!
## Circle Averages as a Function of the Radius
-/

lemma continuousAt_circleAverage (h : ContDiffOn ‚Ñù 0 f (Metric.sphere 0 r)) :
    ContinuousAt (circleAverage f 0) r := by
  unfold circleAverage
  have Œµ : ‚Ñù := by
    sorry
  have h‚ÇÅŒµ : 0 < Œµ := by
    sorry
  have a : Set ‚ÑÇ := Metric.closedBall 0 (r + Œµ) \ Metric.ball 0 (r - Œµ)
  have h‚ÇÅa : IsCompact a := by
    sorry
  have h‚ÇÇa : ‚àÄ œÅ t, a ‚àà ùìù (circleMap 0 œÅ t) := by
    sorry
  have n : Set ‚Ñù := Metric.ball 0 (r + Œµ) \ Metric.closedBall 0 (r - Œµ)
  have hn : n ‚àà ùìù r := by
    sorry
  have h‚ÇÇn : ‚àÄ œÅ : ‚Ñù, dist œÅ r < Œµ ‚Üí ‚àÄ t : ‚Ñù, circleMap 0 œÅ t ‚àà a := by
    sorry
  have h‚ÇÇf : ContinuousOn f a := by
    sorry
  apply ContinuousAt.mul (by fun_prop)
  apply intervalIntegral.continuousAt_of_dominated_interval
  ¬∑ apply Metric.eventually_nhds_iff.mpr
    use Œµ, h‚ÇÅŒµ
    intro œÅ hœÅ
    apply ContinuousOn.aestronglyMeasurable
    ¬∑ intro t ht
      apply ContinuousAt.continuousWithinAt
      apply ContinuousAt.comp' _ (by fun_prop)
      exact (continuousWithinAt_iff_continuousAt (h‚ÇÇa œÅ t)).1 (h‚ÇÇf (circleMap 0 œÅ t) (h‚ÇÇn œÅ hœÅ t))
    ¬∑ exact measurableSet_uIoc
  ¬∑
    sorry
  ¬∑ sorry
  ¬∑ sorry
  ¬∑ sorry

lemma xx {r : ‚Ñù} :
    DifferentiableAt ‚Ñù (circleAverage f 0) r := by
  unfold circleAverage
  sorry
