/-
Copyright (c) 2025 Stefan Kebekus. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Stefan Kebekus
-/
import VD.ProximityFunction
import VD.ToMathlib.CharacteristicFunction

/-!
# The First Main Theorem of Value Distribution Theory

The First Main Theorem of Value Distribution Theory is a two-part statement,
establishing invariance of the characteristic function `characteristic f ‚ä§`
under modifications of `f`.

- If `f` is meromorphic on the complex plane, then the characteristic functions
  for the value `‚ä§` of the function `f` and `f‚Åª¬π` agree up to a constant, see
  Proposition 2.1 on p. 168 of [Lang, *Introduction to Complex Hyperbolic
  Spaces*][MR886677].

- If `f` is meromorphic on the complex plane, then the characteristic functions
  for the value `‚ä§` of the function `f` and `f - const` agree up to a constant,
  see Proposition 2.2 on p. 168 of [Lang, *Introduction to Complex Hyperbolic
  Spaces*][MR886677]

See Section~VI.2 of [Lang, *Introduction to Complex Hyperbolic
Spaces*][MR886677] or Section~1.1 of [Noguchi-Winkelmann, *Nevanlinna Theory in
Several Complex Variables and Diophantine Approximation*][MR3156076] for a
detailed discussion.

### TODO

- Formalize the first part of the First Main Theorem, which is the more
  substantial part of the statement.
-/

/-!
# Circle Averages
-/

variable
  {E : Type*} [NormedAddCommGroup E] [NormedSpace ‚Ñù E]
  {ùïú : Type*} [NontriviallyNormedField ùïú] [NormedSpace ùïú E] [SMulCommClass ‚Ñù ùïú E]
  {f f‚ÇÅ f‚ÇÇ : ‚ÑÇ ‚Üí ‚Ñù} {c : ‚ÑÇ} {R : ‚Ñù} {a : ùïú}

open Real

/--
Analogue of `IntervalIntegrable.abs`: If a function real-valued funcion `f` is
circle integrable, then so is `|f|`.
-/
theorem CircleIntegrable.abs {f : ‚ÑÇ ‚Üí ‚Ñù} (hf : CircleIntegrable f c R) :
    CircleIntegrable |f| c R := IntervalIntegrable.abs hf

/--
The circle average of a constant function equals the constant.
-/
theorem circleAverage_const (a : ‚Ñù) (c : ‚ÑÇ) (R : ‚Ñù) : circleAverage (fun _ ‚Ü¶ a) c R = a := by
  simp only [circleAverage, mul_inv_rev, intervalIntegral.integral_const, sub_zero, smul_eq_mul]
  ring_nf
  simp [mul_inv_cancel‚ÇÄ pi_ne_zero]

/--
If `f x` equals `a` on for every point of the circle, then the circle average of
`f` equals `a`.
-/
theorem circleAverage_const_on_circle {a : ‚Ñù} (hf : ‚àÄ x ‚àà Metric.sphere c |R|, f x = a) :
    circleAverage f c R = a := by
  rw [circleAverage]
  conv =>
    left; arg 2; arg 1
    intro Œ∏
    rw [hf (circleMap c R Œ∏) (circleMap_mem_sphere' c R Œ∏)]
  apply circleAverage_const a c R

/--
If `f x` is smaller than `a` on for every point of the circle, then the circle
average of `f` is smaller than `a`.
-/
theorem circleAverage_mono_on_of_le_circle {a : ‚Ñù} (hf : CircleIntegrable f c R)
    (h‚ÇÇf : ‚àÄ x ‚àà Metric.sphere c |R|, f x ‚â§ a) :
    circleAverage f c R ‚â§ a := by
  rw [‚Üê circleAverage_const a c |R|, circleAverage, circleAverage, smul_eq_mul, smul_eq_mul,
    mul_le_mul_iff_of_pos_left (inv_pos.2 two_pi_pos)]
  apply intervalIntegral.integral_mono_on_of_le_Ioo (le_of_lt two_pi_pos) hf
  apply intervalIntegral.intervalIntegrable_const a
  exact fun Œ∏ _ ‚Ü¶ h‚ÇÇf (circleMap c R Œ∏) (circleMap_mem_sphere' c R Œ∏)

/--
Analogue of `intervalIntegral.abs_integral_le_integral_abs`: The absolute value
of a circle average is less than or equal to the circle average of the absolute
value of the function.
-/
theorem abs_circleAverage_le_circleAverage_abs :
    |circleAverage f c R| ‚â§ circleAverage |f| c R := by
  rw [circleAverage, circleAverage, smul_eq_mul, smul_eq_mul, abs_mul, abs_of_pos (inv_pos.2 two_pi_pos),
    mul_le_mul_iff_of_pos_left (inv_pos.2 two_pi_pos)]
  exact intervalIntegral.abs_integral_le_integral_abs (le_of_lt two_pi_pos)

/--
Variant of `posLog_add` for norms of elements in normed additive commutative
groups, using monotonicity of `log‚Å∫` and the triangle inequality.
-/
lemma posLog_norm_add_le {E : Type*} [NormedAddCommGroup E] (a b : E) :
    log‚Å∫ ‚Äña + b‚Äñ ‚â§ log‚Å∫ ‚Äña‚Äñ + log‚Å∫ ‚Äñb‚Äñ + log 2 := by
  calc log‚Å∫ ‚Äña + b‚Äñ
  _ ‚â§ log‚Å∫ (‚Äña‚Äñ + ‚Äñb‚Äñ) := by
    apply monotoneOn_posLog _ _ (norm_add_le a b)
    <;> simp [add_nonneg (norm_nonneg a) (norm_nonneg b)]
  _ ‚â§ log‚Å∫ ‚Äña‚Äñ + log‚Å∫ ‚Äñb‚Äñ + log 2 := by
    convert posLog_add using 1
    ring

/-!
# File Body
-/

namespace ValueDistribution

variable
  {E : Type*} [NormedAddCommGroup E] [NormedSpace ‚ÑÇ E]
  {f : ‚ÑÇ ‚Üí E} {a‚ÇÄ : E}

open Asymptotics Filter Real

/-!
## Second part of the First Main Theorem
-/

/--
Second part of the First Main Theorem of Value Distribution Theory, quantitative
version: If `f` is meromorphic on the complex plane, then the characteristic
functions (for value `‚ä§`) of `f` and `f - a‚ÇÄ` differ at most by `log‚Å∫ ‚Äña‚ÇÄ‚Äñ + log
2`.
-/
theorem FirstMainTheorem‚ÇÇ_quant {r : ‚Ñù} (h : MeromorphicOn f ‚ä§) :
    |characteristic f ‚ä§ r - characteristic (f ¬∑ - a‚ÇÄ) ‚ä§ r| ‚â§ log‚Å∫ ‚Äña‚ÇÄ‚Äñ + log 2 := by
  have h‚ÇÅf : CircleIntegrable (fun x ‚Ü¶ log‚Å∫ ‚Äñf x‚Äñ) 0 r :=
    MeromorphicOn.circleIntegrable_posLog_norm (fun x a ‚Ü¶ h x trivial)
  have h‚ÇÇf : CircleIntegrable (fun x ‚Ü¶ log‚Å∫ ‚Äñf x - a‚ÇÄ‚Äñ) 0 r := by
    apply MeromorphicOn.circleIntegrable_posLog_norm
    apply MeromorphicOn.sub (fun x a => h x trivial) (MeromorphicOn.const a‚ÇÄ)
  rw [‚Üê Pi.sub_apply, characteristic_sub_characteristic_eq_proximity_sub_proximity h]
  simp only [proximity, reduceDIte, Pi.sub_apply, ‚Üê circleAverage_sub h‚ÇÅf h‚ÇÇf]
  apply le_trans abs_circleAverage_le_circleAverage_abs
  apply circleAverage_mono_on_of_le_circle
  apply (h‚ÇÅf.sub h‚ÇÇf).abs
  intro Œ∏ hŒ∏
  simp only [Pi.abs_apply, Pi.sub_apply]
  by_cases h : 0 ‚â§ log‚Å∫ ‚Äñf Œ∏‚Äñ - log‚Å∫ ‚Äñf Œ∏ - a‚ÇÄ‚Äñ
  ¬∑ simpa [abs_of_nonneg h, sub_le_iff_le_add, add_comm (log‚Å∫ ‚Äña‚ÇÄ‚Äñ + log 2), ‚Üê add_assoc]
      using (posLog_norm_add_le (f Œ∏ - a‚ÇÄ) a‚ÇÄ)
  ¬∑ simp [abs_of_nonpos (le_of_not_ge h), neg_sub, sub_le_iff_le_add, add_comm (log‚Å∫ ‚Äña‚ÇÄ‚Äñ + log 2),
      ‚Üê add_assoc]
    convert posLog_norm_add_le (-f Œ∏) (a‚ÇÄ) using 2
    ¬∑ rw [‚Üê norm_neg]
      abel_nf
    ¬∑ simp

/--
Second part of the First Main Theorem of Value Distribution Theory, qualitative
version: If `f` is meromorphic on the complex plane, then the characteristic
functions for the value `‚ä§` of the function `f` and `f - a‚ÇÄ` agree
asymptotically up to a bounded function.
-/
theorem FirstMainTheorem‚ÇÇ_qual (h : MeromorphicOn f ‚ä§) :
    |(characteristic f ‚ä§) - (characteristic (f ¬∑ - a‚ÇÄ) ‚ä§)| =O[atTop] (1 : ‚Ñù ‚Üí ‚Ñù) := by
  simp_rw [isBigO_iff', eventually_atTop]
  use log‚Å∫ ‚Äña‚ÇÄ‚Äñ + log 2, add_pos_of_nonneg_of_pos posLog_nonneg (log_pos one_lt_two), 0
  simp [FirstMainTheorem‚ÇÇ_quant h]

end ValueDistribution
